{"version":3,"sources":["hello-react.jsx"],"names":[],"mappings":"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","file":"hello-react.js","sourcesContent":["var CommentBox = React.createClass({\n  loadCommentsFromServer: function() {\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      cache: false,\n      success: function(data) {\n        this.setState({data: data});\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  handleCommentSubmit: function(comment) {\n    var comments = this.state.data;\n    var newComments = comments.concat([comment]);\n    this.setState({data: newComments});\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: comment,\n      success: function(data) {\n        this.setState({data: data});\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.error(this.props.url, status, err.toString());\n      }.bind(this)\n    });\n  },\n  getInitialState: function() {\n    return {data: []};\n  },\n  componentDidMount: function() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  },\n  render: function() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.state.data}/>\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n});\n\nvar CommentList = React.createClass({\n  render: function() {\n    var commentNodes = this.props.data.map(\n      function (comment) {\n        return (\n            <Comment author={comment.author}>\n              {comment.text}\n            </Comment>\n        );\n      }\n    );\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    );\n  }\n});\n\nvar CommentForm = React.createClass({\n  handleSubmit: function(e) {\n    e.preventDefault(); // ブラウザデフォルトのサブミットをキャンセルしている。\n    var author = React.findDOMNode(this.refs.author).value.trim();\n    var text = React.findDOMNode(this.refs.text).value.trim();\n    if (!text || !author) {\n      return;\n    }\n    this.props.onCommentSubmit({author: author, text: text});\n    React.findDOMNode(this.refs.author).value = '';\n    React.findDOMNode(this.refs.text).value = '';\n    return;\n  },\n  render: function() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" placeholder=\"Your name\" ref=\"author\"/>\n        <input type=\"text\" placeholder=\"Say something...\" ref=\"text\"/>\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n});\n\nvar Comment = React.createClass({\n  render: function() {\n    var rawMarkup = marked(this.props.children.toString(), {sanitize: true});\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <span dangerouslySetInnerHTML={{__html: rawMarkup}} />\n      </div>\n    );\n  }\n});\n\nwindow.onload = function() {\n  React.render(\n      <CommentBox url=\"http://localhost:3000/comments\" pollInterval=\"\"/>,\n      document.getElementById('app-container')\n  );\n}\n"],"sourceRoot":"/source/"}